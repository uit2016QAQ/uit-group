#include <stdio.h>
#include <stdlib.h>
#define LIST_INIT_SIZE 20 //线性表存储空间的初始分配量
#define LISTINCREMENT 5   //线性表存储空间的分配增量
//请编码完成常量名及自定义数据类型的定义
typedef int status;
typedef int ElemType;
typedef struct{
    ElemType *elem;       //存储空间的基地址
    int length;      //当前线性表的长度
    int listsize;    //当前分配的存储容量
}SqList;
void InitList(SqList &l)
{
    l.elem=(ElemType *)malloc(LIST_INIT_SIZE*sizeof(ElemType));//动态申请初始内存
    if(l.elem==NULL)
    {
        exit(0);
    }
    l.length=0;//长度初始化为零
    l.listsize=LIST_INIT_SIZE;//初始化储存容量
  //请编码完成顺序表l的初始化

}

status ListInsert(SqList &l)
{
	int n;
    if(l.length>=l.listsize)
    {
        ElemType *newbase;
        newbase=(ElemType *)realloc(l.elem,(l.listsize+LISTINCREMENT)*sizeof(ElemType));
        if(newbase==NULL)
        {
            exit(0);
        }
        l.elem=newbase;
        l.listsize+=LISTINCREMENT;//扩大容量声明
    }
    ElemType *p,*q;
	int e;
	printf("请输入插入元素个数");
	scanf("%d",&n);
	for(int i=0;i<n;i++)
	{
       	printf("请输入插入元素");
	    scanf("%d",&e);
        q=&l.elem[i];//下标减一
        for(p=&(l.elem[l.length]);p>=q;--p)
		{
           *(p+1)=*p;
		}//将i位置后的所有元素往后移一位
        *q=e;
        ++l.length;
	}
	return n;
}
void print(SqList &l)
{
    for(int i=0;i<l.length;i++)
	{
		printf("%d  ",l.elem[i]);
	}
	printf("\n");
}
status search(SqList &l,int n)
{
	int x,i;
	printf("请输入删除的元素");
	scanf("%d",&x);
	for(i=0;i<n;i++)
    {
        if(l.elem[i]==x)
		{
	     	return i;
		}
	}	
    return 0;
}
status ListDelete(SqList &l,int i)
{
    
    ElemType *p,*q;
    p=&l.elem[i];
    q=&l.elem[l.length];
	while(p<q)
    {
        *p=*(p+1);
         p++;
    }
    l.length--;
    return 0;
  //请编码完成删除顺序表l的第i个数据元素，并将删除元素值通过参数e返回。如果成功函数返回OK，否则返回ERROR。


}
int main()
{
	SqList List;
	int e,x;
	int i,j;
	int n;
	InitList(List);
    n=ListInsert(List);
	print(List);
	x=search(List,n);
    ListDelete(List,x);
	print(List);
	return 0;
}
